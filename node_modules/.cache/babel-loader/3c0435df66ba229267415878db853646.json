{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mbacherycz/Documents/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mbacherycz/Documents/portfolio/portfolio/src/components/Portfolio/Modal/Modal.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n        color: #ffffff;\\n        font-size: 30px;\\n        text-align: center;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'; //Redux\n\nimport { connect } from 'react-redux';\nimport { closeModal, addProject } from \"../../../redux/actions/portfolioActions\";\n\nclass Modal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: '',\n        employer: '',\n        image: '',\n        linke: ''\n      }\n    };\n\n    this.onChangeHandler = e => {\n      console.log(this.state);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const Title = styled.h1(_templateObject());\n    const data = this.state.data;\n    return React.createElement(React.Fragment, null, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Add new Portfolio!\"), React.createElement(\"input\", {\n      onChange: e => this.onChangeHandler(e),\n      type: \"text\",\n      placeholder: \"Project name\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: e => this.onChangeHandler(e),\n      type: \"text\",\n      placeholder: \"Company\",\n      name: \"employer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: e => this.onChangeHandler(e),\n      type: \"text\",\n      placeholder: \"Link to the image\",\n      name: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: e => this.onChangeHandler(e),\n      type: \"text\",\n      placeholder: \"Link to the project\",\n      name: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.props.addProject(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"button\", {\n      onClick: () => this.props.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"close\"));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  closeModal,\n  addProject\n};\nexport default connect(null, mapDispatchToProps)(Modal);","map":{"version":3,"sources":["/Users/mbacherycz/Documents/portfolio/portfolio/src/components/Portfolio/Modal/Modal.js"],"names":["React","Component","styled","connect","closeModal","addProject","Modal","state","data","title","employer","image","linke","onChangeHandler","e","console","log","setState","target","name","value","render","Title","h1","props","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,yCAAvC;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,QAAQ,EAAE,EAFR;AAGFC,QAAAA,KAAK,EAAE,EAHL;AAIFC,QAAAA,KAAK,EAAE;AAJL;AADF,KAFkB;;AAAA,SAW1BC,eAX0B,GAWPC,CAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,WAAKU,QAAL,CAAc;AACV,SAACH,CAAC,CAACI,MAAF,CAASC,IAAV,GAAiBL,CAAC,CAACI,MAAF,CAASE;AADhB,OAAd;AAGH,KAhByB;AAAA;;AAoB1BC,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAGpB,MAAM,CAACqB,EAAV,mBAAX;AAMA,UAAMf,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AAEA,WACI,0CACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAO,MAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKD,eAAL,CAAqBC,CAArB,CAAxB;AAAiD,MAAA,IAAI,EAAC,MAAtD;AAA6D,MAAA,WAAW,EAAC,cAAzE;AAAwF,MAAA,IAAI,EAAC,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,OAE4G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5G,EAGI;AAAO,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKD,eAAL,CAAqBC,CAArB,CAAxB;AAAiD,MAAA,IAAI,EAAC,MAAtD;AAA6D,MAAA,WAAW,EAAC,SAAzE;AAAmF,MAAA,IAAI,EAAC,UAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,OAG0G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH1G,EAII;AAAO,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKD,eAAL,CAAqBC,CAArB,CAAxB;AAAiD,MAAA,IAAI,EAAC,MAAtD;AAA6D,MAAA,WAAW,EAAC,mBAAzE;AAA6F,MAAA,IAAI,EAAC,OAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,OAIiH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJjH,EAKI;AAAO,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKD,eAAL,CAAqBC,CAArB,CAAxB;AAAiD,MAAA,IAAI,EAAC,MAAtD;AAA6D,MAAA,WAAW,EAAC,qBAAzE;AAA+F,MAAA,IAAI,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,OAKkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALlH,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKU,KAAL,CAAWnB,UAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,EAOI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKmB,KAAL,CAAWpB,UAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,CADJ;AAWH;;AAxCyB;;AA4C9B,MAAMqB,kBAAkB,GAAG;AACvBrB,EAAAA,UADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeF,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCnB,KAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n//Redux\nimport { connect } from 'react-redux';\nimport { closeModal, addProject } from \"../../../redux/actions/portfolioActions\";\n\nclass Modal extends Component {\n\n    state = {\n        data: {\n            title: '',\n            employer: '',\n            image: '',\n            linke: ''\n        }\n    }\n\n    onChangeHandler = (e) => {\n        console.log(this.state);\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n\n    render() {\n        const Title = styled.h1`\n        color: #ffffff;\n        font-size: 30px;\n        text-align: center;\n        `;\n\n        const data = this.state.data;\n\n        return (\n            <>\n                <Title>Add new Portfolio!</Title>\n                <input onChange={(e) => this.onChangeHandler(e)} type='text' placeholder='Project name' name='title' /> <br />\n                <input onChange={(e) => this.onChangeHandler(e)} type='text' placeholder='Company' name='employer' /> <br />\n                <input onChange={(e) => this.onChangeHandler(e)} type='text' placeholder='Link to the image' name='image' /> <br />\n                <input onChange={(e) => this.onChangeHandler(e)} type='text' placeholder='Link to the project' name='link' /> <br />\n                <button onClick={() => this.props.addProject()}>Add</button>\n                <button onClick={() => this.props.closeModal()}>close</button>\n            </>\n        )\n    }\n\n}\n\nconst mapDispatchToProps = {\n    closeModal,\n    addProject\n}\n\nexport default connect(null, mapDispatchToProps)(Modal);"]},"metadata":{},"sourceType":"module"}